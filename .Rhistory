<<<<<<< HEAD
library(ggplot2)
install(ggplot2)
install('ggplot2')
install.packages("ggplot2")
library(ggplot2)
data(diamonds)
summary(diamonds)
?diamonds
qplot(data=diamonds, x=price)
qplot(data=diamonds, x=price, binwidth=100)
qplot(data=diamonds, x=price, binwidth=500)
qplot(data=diamonds, x=price, binwidth=1000)
qplot(data=diamonds, x=price, binwidth=300)
summary(diamonds$price)
length(diamons$price < 500)
length(diamonds$price < 500)
length(diamonds$price < 250)
length(diamonds$price >= 15000)
length(subset(diamonds, price < 500))
length(subset(diamonds, price < 350))
length(subset(diamonds, price < 250
)
)
length(subset(diamonds, price >= 15000))
length(diamonds[diamonds$price < 500,])
diamonds[diamonds$price < 500,]
dim(diamonds)
dim(diamonds[diamonds$price < 500,])
length(diamonds[dianmonds$price < 500, 8])
length(diamonds[diamonds$price < 500, 8])
length(diamonds[diamonds$price < 250, 8])
length(diamonds[diamonds$price >= 15000, 8])
qplot(data=diamonds, x=price, binwidth=100, xlim=c(0, 1000))
qplot(data=diamonds, x=price, binwidth=100, xlim=c(300, 1000))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1000))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1500))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="blue")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="red")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="red", fill="grey")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), fill="blue")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), fill="green")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), fill="green")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="green")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200)) + geom_histogram(colour="red")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red"))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red")) + scale_x_continuous(break=c(300,1200,50))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red")) + scale_x_continuous(breaks=c(300,1200,50))
qplot(data=diamonds, x=price, binwidth=50, colour=I("red")) + scale_x_continuous(lim=c(300,1200), breaks=c(300,1200,50))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red"))
ggsave('priceHistogram.jpg')
qplot(data=diamonds, x=price, color=cut)
qplot(data=diamonds, x=price) + facet_grid(. ~ cut)
by(diamonds, price, cut, summary)
by(diamonds$price, cut, summary)
?by
by(diamonds, cut, summary)
by(diamonds, diamonds$price, diamonds$cut, summary
)
by(diamonds, diamonds$price, diamonds$cut, summary)
by(diamonds, diamonds$cut, summary)
by(diamonds[,c(2,7)], diamonds$cut, summary)
by(diamonds$price, diamonds$cut, summary)
summary(diamonds$price)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, max, digits=max(getOption('digits')))
digits
max(getOption('digits'))
qplot(x = price, data = diamonds) + facet_wrap(~cut)
?facet_wrap
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales="free_y")
qplot(x = price, data = diamonds) + facet_wrap(~cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=50) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=300) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + x_scale_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + x_scalelog10() + facet_wrap(~cut, scales="free_y")
?x_scale
qplot(x = price/carat, data = diamonds, binwidth=100) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=10) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=1) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=1000) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=500) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.5) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.1) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.05) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.075) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.1) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.075) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(data=diamonds, x=cut, y=price, geom="boxplots")
qplot(data=diamonds, x=cut, y=price, geom="boxplot")
qplot(data=diamonds, x=cut, y=price, geom="boxplot", ylim=c(200,7000))
qplot(data=diamonds, x=cut, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,5000))
qplot(data=diamonds, x=cut, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,6000))
qplot(data=diamonds, x=cut, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,7000))
qplot(data=diamonds, x=cut, y=clarity, geom="boxplot")
qplot(data=diamonds, y=price, x=clarity, geom="boxplot")
qplot(data=diamonds, x=clarity, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,7000))
qplot(data=diamonds, y=price, x=color, geom="boxplot")
qplot(data=diamonds, x=color, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,7000))
qplot(data=diamonds, x=color, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,8000))
by(diamonds$price, diamonds$color, summary)
by(diamonds$price, diamonds$color, iqr
)
?IQR
by(diamonds$price, diamonds$color, IQR)
?diamonds
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot") + coord_cartesian(ylim=c(200,8000))
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot") + coord_cartesian(ylim=c(2000,6000))
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot")
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot") + coord_cartesian(ylim=c(2000,6000))
by(diamonds$price/diamonds$carat, diamonds$color, IQR)
by(diamonds$price/diamonds$carat, diamonds$color, summary)
qplot(data=diamonds, x=carat, geom"freqpoly")
qplot(data=diamonds, x=carat, geom"freqpol")
qplot(data=diamonds, x=carat, geom="freqpoly")
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.1)
qplot(data=diamonds, x=carat, geom="freqpoly")
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.05)
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.025)
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01)
summary(diamonds$carat)
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + cartesian_coord(xlim=c(1,5))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(1,5))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(2,5))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(2,5), ylim=(0,500))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(2,5), ylim=c(0,500))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01)
by(diamonds$carat, diamonds$carat, sum)
by(diamonds$carat, diamonds$carat, length)
by(diamonds$carat, diamonds$carat, dim)
by(diamonds$carat, diamonds$carat, length)
by(diamonds$carat, diamonds$carat, length) > 2000
by(diamonds$carat, diamonds$carat, length) > 2000 == TRUE
d1 <- by(diamonds$carat, diamonds$carat, length)
dim(D1)
dim(d1)
d1
summary(d1)
d1 > 2000
d1
d1[d1>2000,]
d1[d1>2000]
dplyr::tbl_df(diamonds)
load(dplyr)
load('dplyr')
install.packages("dplyr")
install.packages("tidyr")
load(dplyr)
load('dplyr')
load('tidyr')
?load
?package
?install
?package
library(dplyr)
library('dplyr')
library()
library(plyr)
library(tidyr)
tbl(diamonds)
tbl_df(diamonds)
plyr::tbl_df(diamonds)
dplyr::tbl_df(diamonds)
?plyr
library(dplyr)
?dplyr
install.packages("dplyr")
library(dplyr)
dplyr::tbl_df(diamonds)
getwd()
?read.table
install.packages("xlsx")
?xlsx
library(xlsx)
?xlsx
df_cell <- read.xlsx('cell phone total.xlsx')
df_cell <- read.xlsx('cell phone total.xlsx',1)
names(df_cell)
summary(df_cell$X2011)
by(df_cell$X2011, df_Cell$Mobile.cellular.subscriptions..total.number, summary)
by(df_cell$X2011, df_cell$Mobile.cellular.subscriptions..total.number, summary)
qplot(data=df_cell, y=X2011, x=Mobile.cellular.subscriptions..total.number)
df1 <- subset(df_cell, df$X2011 > 100000)
?subset
df1 <- subset(df_cell, X2011 > 100000)
df1 <- subset(df_cell, X2011 > 1000000)
df[1:10,1:5]
df1[1:10,1:5]
df1[1:10,c(1,47,48)]
df1[df1$Mobile.cellular.subscriptions..total.number == "India",]
df2 <- df_cell[df_cell$Mobile.cellular.subscriptions..total.number == "India",]
qplot(data=df2, x=X2011, geom="bar")
librray(ggplot)
library(ggplot2)
library(GGally)
library(scales)
install.packages('memisc')
library(dplyr)
library(reshape2)
librray(gridExtra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
wine <- read.csv("./wineQualityWhites.csv")
getwd()
setwd("github/eda")
wine <- read.csv("./wineQualityWhites.csv")
?describe
=======
pairs(wine,
lower.panel=panel.smooth, upper.panel=null,
pch=20, main="Scatterplot Matrix")
pairs(wine,
lower.panel=panel.smooth, upper.panel=NULL,
pch=20, main="Scatterplot Matrix")
pairs(wine, show.points=F, rug=F, desnity=F, gap=0, ellipses=F,
lower.panel=panel.smooth, upper.panel=NULL,
pch=20, main="Scatterplot Matrix")
pairs.panels(wine[2:13], show.points=F, rug=F, density=F, gap=0,ellipses=F, upper.panel=NULL)
pairs.panels(wine[2:13], show.points=F, rug=F, density=F, gap=0,ellipses=F)
pairs(wine, show.points=F, rug=F, desnity=F, gap=0, ellipses=F,
lower.panel=panel.smooth, upper.panel=NULL,
main="Scatterplot Matrix")
pairs.panels(wine[2:13], show.points=F, rug=F, density=F, gap=0,ellipses=F, scale=F)
pairs.panels(wine[2:13], show.points=F, rug=F, density=F, gap=0,ellipses=F, scale=T)
?pairs.panels
pairs.panels(wine[2:13], show.points=F, rug=F, density=F, gap=0, ellipses=F, cor=F)
pairs(wine, show.points=F, rug=F, density=F, gap=0, ellipses=F,
lower.panel=panel.smooth, upper.panel=NULL,
main="Scatterplot Matrix")
ggplot(data=wine, aes(y=alcohol, x=quality)) + geom_jitter(alpha=0.5) + geom_smooth()
ggplot(data=wine, aes(y=alcohol, x=quality)) + geom_jitter(alpha=0.5) + geom_smooth(method=lm)
ggplot(data=wine, aes(y=alcohol, x=quality)) + geom_smooth(method=lm)
g <- NULL
for(i in 2:length(wine)-1) {
g <- g + ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid_arrange(g, 3, 4)
load(gridExtra)
library(grdiExtra)
library(gridExtra
)
g <- NULL
for(i in 2:length(wine)-1) {
g <- g + ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid_arrange(g, 3, 4)
g <- NULL
for(i in 2:length(wine)-1) {
g <- g + ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid.arrange(g, 3, 4)
g <- NULL
for(i in 2:length(wine)-1) {
g[i] <- ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid.arrange(g)
g <- list()
for(i in 2:length(wine)-1) {
g[i-1] <- ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid.arrange(g)
g <- list()
for(i in 2:length(wine)-1) {
g[i-1] <- ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid.arrange(g, ncol=3)
g <- list()
for(i in 2:length(wine)-1) {
g[[i-1]] <- ggplot(data=wine, aes(y=wine[i], x=quality)) + geom_smooth(method=lm)
}
grid.arrange(g, ncol=3)
print(g[1])
print(g)
g[1] <- ggplot(data=wine, aes(y=wine[2], x=quality)) + geom_smooth(method=lm)
ggplot(data=wine, aes(y=wine[2], x=quality)) + geom_smooth(method=lm)
ggplot(data=wine, aes(y=wine[,2], x=quality)) + geom_smooth(method=lm)
g <- list()
for(i in 2:length(wine)-1) {
g[i-1] <- ggplot(data=wine, aes(y=wine[,i], x=quality)) + geom_smooth(method=lm)
}
grid.arrange(g, ncol=3)
print(g)
print(g[1])
plot.ggplot(g[1])
print g[1]
print.ggplot(g[1])
library(ggplot)
library(ggplot2)
print.ggplot(g[1])
plot(g[1])
plot(g[[1]])
g <- list()
for(i in 2:length(wine)-1) {
g[[i-1]] <- ggplot(data=wine, aes(y=wine[,i], x=quality)) + geom_smooth(method=lm)
}
names(wine[,2])
names(wine[2])
g <- list()
for(i in 2:length(wine)-1) {
g[[i-1]] <- ggplot(data=wine, aes_string(y=names(wine[i]), x="quality")) + geom_smooth(method=lm)
}
g <- list()
for(i in 2:length(wine)-1) {
g[i-1] <- ggplot(data=wine, aes_string(y=names(wine[i]), x="quality")) + geom_smooth(method=lm)
}
plot(g[1])
g <- list()
for(i in 2:length(wine)-1) {
g[[i-1]] <- ggplot(data=wine, aes_string(y=names(wine[i]), x="quality")) + geom_smooth(method=lm)
}
g <- list()
for(i in 2:length(wine)-1) {
g[[i-1]] <- ggplot(data=wine, aes_string(y=names(wine)[i], x="quality")) + geom_smooth(method=lm)
}
g <- list()
for(i in 2:length(wine)-1) {
g[i-1] <- ggplot(data=wine, aes_string(y=names(wine)[i], x="quality")) + geom_smooth(method=lm)
}
print(g[[1]])
g <- list()
for(i in 2:length(wine)-1) {
g[[i-1]] <- ggplot(data=wine, aes_string(y=names(wine)[i], x="quality")) +
geom_smooth(method=lm)
}
names(wine)[2]
g <- list()
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes_string(y=names(wine)[i], x="quality")) +
geom_smooth(method=lm)
g[[i-1]] <- p
}
pushp(g, p)
append(g, p)
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes_string(y=names(wine)[i], x="quality")) +
geom_smooth(method=lm)
g[[i-1]] <- p
}
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
g[[i-1]] <- p
}
print(p)
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
g[i-1] <- p
}
print(g[[1]])
print(g[1])
names(g)
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
g[[i-1]] <- print(p)
}
names(iris)
var_list = combn(names(iris)[1:3], 2, simplify=FALSE)
# Make plots.
plot_list = list()
for (i in 1:3) {
p = ggplot(iris, aes_string(x=var_list[[i]][1], y=var_list[[i]][2])) +
geom_point(size=3, aes(colour=Species))
plot_list[[i]] = p
}
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
g[[i-1]] <- print(p)
}
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
g[[i-1]] <- p
}
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
// g[[i-1]] <- p
}
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
# g[[i-1]] <- p
}
print(p)
g <- vector("list", length(wine)-2)
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
print(p)
# g[[i-1]] <- p
}
plot_list <- list()
for(i in 2:length(wine)-1) {
p <- ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[i-1]] <- p
}
plot_list = list()
for(i in 2:length(wine)-1) {
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[i-1]] = p
}
plot_list = list()
for(i in 2:length(wine)-1) {
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[i]] = p
}
plot_list = list()
for(i in 2:length(wine)-1) {
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[(i-1)]] = p
}
length(wine)
plot_list = list()
for(i in 2:(length(wine)-1) {
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[(i-1)]] = p
}
plot_list = list()
for(i in 2:(length(wine)-1)) {
print i
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[(i-1)]] = p
}
plot_list = list()
for(i in 2:(length(wine)-1)) {
print(i)
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[(i-1)]] = p
}
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm)
plot_list[[(i-1)]] = p
}
print(plot_list[[1]])
print(plot_list[[2]])
print(plot_list[[5]])
str(plot_list)
print(plot_list[[5]])
grid.arrange(plot_list)
do.call(grid.arrange,plot_list)
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
p = ggplot(data=wine, aes(y=wine[,i], x=quality)) +
geom_smooth(method=lm) + ylab(names(wine)[i])
plot_list[[(i-1)]] = p
}
do.call(grid.arrange, plot_list)
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
p = ggplot(data=wine, aes(y=i, x=quality)) +
geom_smooth(method=lm) + ylab(names(wine)[i])
plot_list[[(i-1)]] = p
}
do.call(grid.arrange, plot_list)
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
c = wine[,i]
p = ggplot(data=wine, aes(y=c, x=quality)) +
geom_smooth(method=lm) + ylab(names(wine)[i])
plot_list[[(i-1)]] = p
}
do.call(grid.arrange, plot_list)
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
c = wine[,i]
p = ggplot(data=wine, aes(y=get(names(wine)[i]), x=quality)) +
geom_smooth(method=lm) + ylab(names(wine)[i])
plot_list[[(i-1)]] = p
}
grid.arrange(grobs=plot_list, ncol=3)
do.call(grid.arrange, plot_list)
colnames(wine)[2]
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
c = wine[,i]
p = ggplot(data=wine, aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(names(wine)[i])
plot_list[[(i-1)]] = p
}
#grid.arrange(grobs=plot_list, ncol=3)
do.call(grid.arrange, plot_list)
plot_list = list()
for(i in 2:(length(wine)-1)) {
#print(i)
c = wine[,i]
p = ggplot(data=wine, aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(colnames(wine)[i])
plot_list[[(i-1)]] = p
}
#grid.arrange(grobs=plot_list, ncol=3)
do.call(grid.arrange, plot_list)
plot_list <- list()
for(i in 2:(length(wine)-1)) {
plot_list[[(i-1)]] <- ggplot(data=wine,
aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(colnames(wine)[i])
}
do.call(grid.arrange, plot_list)
plot_list <- list()
for(i in 2:(length(wine)-1)) {
plot_list[[(i-1)]] <- ggplot(data=wine,
aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(colnames(wine)[i])
}
do.call(grid.arrange, plot_list)
library(girdExtra)
library(gridExtra)
plot_list <- list()
for(i in 2:(length(wine)-1)) {
plot_list[[(i-1)]] <- ggplot(data=wine,
aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(colnames(wine)[i])
}
do.call(grid.arrange, plot_list)
library(ggplot)
>>>>>>> 9903a3831c3f9f00589f4be3919651628e11c820
library(ggplot2)
library(psych)
library(memisc)
<<<<<<< HEAD
?describe
describe(wine, skew=F, trim=0)
describe(wine, skew=F, range=F)
describe(wine, skew=F, fast=T)
describe(wine, fast=T)
?pairs.panel
library(psych)
?pairs.panels
?cor.plot
ggplot(data=wine, aes(x=alcohol)) + geom_bar(color='black', fill='green') +
geom_vline(xintercept = mean(wine$alcohol), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$alcohol), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$alcohol, 0.25) - 1.5 * IQR(wine$alcohol), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$alcohol, 0.75) + 1.5 * IQR(wine$alcohol), linetype='dashed', alpha=.5)
ggplot(data=wine, aes(x=alcohol)) + geom_bar(binwidth=0.5, color='black', fill='green') +
geom_vline(xintercept = mean(wine$alcohol), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$alcohol), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$alcohol, 0.25) - 1.5 * IQR(wine$alcohol), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$alcohol, 0.75) + 1.5 * IQR(wine$alcohol), linetype='dashed', alpha=.5)
summary(wine$alcohol)
IQR(wine$alcohol)
summary(wine$pH)
IQR(wine$pH)
ggplot(data=wine, aes(x=pH)) + geom_bar(binwidth=0.05, color='black', fill='green') +
geom_vline(xintercept = mean(wine$pH), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$pH), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$pH, 0.25) - 1.5 * IQR(wine$pH), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$pH, 0.75) + 1.5 * IQR(wine$pH), linetype='dashed', alpha=.5)
summary(wine$volatile.acidity)
function ggCustomHistogram(hist_var, hist_bindwidth) {
ggplot(data=wine, aes(x=hist_var)) + geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine$hist_var), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.25) - 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.75) + 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5)
}
ggCustomHistogram <- function (hist_var, hist_bindwidth) {
return(
ggplot(data=wine, aes(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine$hist_var), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine$hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.25) - 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.75) + 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) )
}
ggCustomeHistogram(volatile.acidity, 0.01)
ggCustomHistogram(volatile.acidity, 0.01)
ggCustomHistogram <- function (hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine$hist_var), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine$hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.25) - 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.75) + 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) )
}
ggCustomHistogram(volatile.acidity, 0.01)
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine$hist_var), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine$hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.25) - 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$hist_var, 0.75) + 1.5 * IQR(wine$hist_var), linetype='dashed', alpha=.5) )
}
ggCustomHistogram(volatile.acidity, 0.01)
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(hist_var), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(hist_var, 0.25) - 1.5 * IQR(hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(hist_var, 0.75) + 1.5 * IQR(hist_var), linetype='dashed', alpha=.5) )
}
ggCustomHistogram(wine$volatile.acidity, 0.01)
str(ggcustomeHistogram)
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(hist_var), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(hist_var, 0.25) - 1.5 * IQR(hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(hist_var, 0.75) + 1.5 * IQR(hist_var), linetype='dashed', alpha=.5) )
}
ggCustomHistogram(wine$volatile.acidity, 0.01)
ggCustomHistogram("wine$volatile.acidity", 0.01)
ggCustomHistogram("volatile.acidity", 0.01)
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine$hist_var), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine$hist_var), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(hist_var, 0.25) - 1.5 * IQR(hist_var), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(hist_var, 0.75) + 1.5 * IQR(hist_var), linetype='dashed', alpha=.5) )
}
ggCustomHistogram("volatile.acidity", 0.01)
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green')
)
}
ggCustomHistogram("volatile.acidity", 0.01)
summray(wine["volatile.acidity"])
summary(wine["volatile.acidity"])
summary(wine$wolatile.acidity)
summary(wine$volatile.acidity)
summary(wine[,"volatile.acidity"])
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green')
geom_vline(xintercept = mean(wine[,hist_var]), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine[,hist_var]), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.25) - 1.5 * IQR(wine,hist_var]), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.75) + 1.5 * IQR(wine[,hist_var]), linetype='dashed', alpha=.5) )
}
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine[,hist_var]), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine[,hist_var]), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.25) - 1.5 * IQR(wine,hist_var]), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.75) + 1.5 * IQR(wine[,hist_var]), linetype='dashed', alpha=.5) )
}
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine[,hist_var]), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine[,hist_var]), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.25) - 1.5 * IQR(wine[],hist_var]), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.75) + 1.5 * IQR(wine[,hist_var]), linetype='dashed', alpha=.5) )
}
ggCustomHistogram <- function(hist_var, hist_binwidth) {
return(
ggplot(data=wine, aes_string(x=hist_var)) +
geom_bar(binwidth=hist_binwidth, color='black', fill='green') +
geom_vline(xintercept = mean(wine[,hist_var]), linetype= 'longdash', color='red', alpha=.5) +
geom_vline(xintercept = median(wine[,hist_var]), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.25) - 1.5 * IQR(wine[,hist_var]), linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine[,hist_var], 0.75) + 1.5 * IQR(wine[,hist_var]), linetype='dashed', alpha=.5) )
}
ggCustomHistogram("volatile.acidity", 0.01)
ggCustomHistogram("quality", 1)
ggCustomHistogram("alcohol", 0.5)
ggCustomHistogram("pH", 0.1)
summary(wine$volatile.acidity)
ggCustomHistogram("volatile.acidity", 0.01)
ggCustomHistogram("volatile.acidity", 0.05)
0.32+ 1.5 * IQR(wine$volatile.acidity)
summary(wine$pH)
ggCustomHistogram("pH", 0.05)
?lowerCor
lowerMat(wine[2:13])
lowerCor(wine[2:13])
lowerCor(wine[2:])
lowerCor(wine[2:-1])
savehistory("~/GitHub/EDA/history-sep27-2.R")
install.packages("scatterplot3d")
library(scatter3d)
library(scatterplot3d)
scatterplot3d(wine, alcohol, volatile.acidity, quality, main="3D Scatterplot")
scatterplot3d(wine, wine$alcohol, wine$volatile.acidity, wine$quality, main="3D Scatterplot")
?scatterplot3d
scatterplot3d(wine$alcohol, wine$volatile.acidity, wine$quality, main="3D Scatterplot")
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, pch=16)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, pch=20)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, pch=16)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h")
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=30)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=75)
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
summary(m3)
m2 <- lm(formula = quality ~ alcohol + volatile.acidity, data = wine)
s3d$plane3d(m2, lty.box = "solid")
s3d <- scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
s3d$plane3d(m2, lty.box = "solid")
?plane3d
s3d <- scatterplot3d(wine$alcohol, wine$volatile.acidity, wine$quality, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
s3d <- scatterplot3d(wine$alcohol, wine$volatile.acidity, wine$quality, main="3D Scatterplot", highlight.3d=T, type="p", pch=16, angle=60)
s3d$plane3d(m2, lty.box = "solid")
scatterplot3d(wine$alcohol, wine$quality, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
scatterplot3d(wine$alcohol, wine$quality.cut, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
scatterplot3d(wine$alcohol, as.numeric(wine$quality.cut), wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
wine$quality.cut <- cut(wine$quality, breaks=c(0,4,6,10),
labels=c("Bad Wine: (0,4]", "Average Wine: (4, 6]",
"Good Wine: (6, 10]"))
scatterplot3d(wine$alcohol, as.numeric(wine$quality.cut), wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
scatterplot3d(wine$alcohol, wine$quality.cut, wine$volatile.acidity, main="3D Scatterplot", highlight.3d=T, type="h", pch=16, angle=60)
library(scatterplot3d)
=======
library(scatterplot3d)
library(gridExtra)
plot_list <- list()
for(i in 2:(length(wine)-1)) {
plot_list[[(i-1)]] <- ggplot(data=wine,
aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(colnames(wine)[i])
}
do.call(grid.arrange, plot_list)
tapply(wine$sulphates, wine$quality, mean)
ggplot(data=wine, aes(y=sulphates, x=factor(quality))) + geom_boxplot()
ggplot(data=wine, aes(y=sulphates, x=quality)) + geom_jitter(alpha=0.25) +
geom_smooth(method='lm')
?coplot
coplot(volatile.acidity~alcohol|quality, panel=panel.smooth, wine)
?coplot
coplot(qualty | volatile.acidity * alcohol, panel=panel.smooth, wine)
coplot(quality | volatile.acidity * alcohol, panel=panel.smooth, wine)
coplot(quality~volatile.acidity * alcohol, panel=panel.smooth, wine)
coplot(quality~alcohol|volatile.acidity * pH, panel=panel.smooth, wine)
?coplot
coplot(volatile.acidity ~ alcohol | quality, data=wine,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
coplot(volatile.acidity ~ alcohol | quality, data=wine,
panel = function(x, y, ...) boxplot(x, y, span = .8, ...))
coplot(volatile.acidity ~ alcohol | quality, data=wine,
panel = function(x, y, ...) boxplot(x, y, ...))
plot(quality ~ voaltile.acidity * alcohol, data=wine)
plot(quality ~ volatile.acidity * alcohol, data=wine)
plot(quality ~ volatile.acidity + alcohol, data=wine)
coplot(quality~alcohol|volatile.acidity * pH, panel=boxplot, wine)
coplot(quality~alcohol|volatile.acidity, panel=boxplot, wine)
ggplot(wine, aes(y=alcohol, x=quality)) + geom_box()
ggplot(wine, aes(y=alcohol, x=quality)) + geom_boxplot()
ggplot(wine, aes(y=quality, x=alcohol)) + geom_boxplot()
ggplot(wine, aes(y=quality, x=alcohol)) + geom_boxplot() + facet_warp(~volatile.acidity)
ggplot(wine, aes(y=quality, x=alcohol)) + geom_boxplot() + facet_wrap(~volatile.acidity)
ggplot(wine, aes(y=volatile.acidity, x=alcohol)) + geom_boxplot() + facet_wrap(~quality)
coplot(quality~alcohol|volatile.acidity, number=3, panel=boxplot, wine)
coplot(quality~alcohol|volatile.acidity, number=3, panel=panel.smooth, wine)
coplot(quality~alcohol|volatile.acidity, number=2, panel=panel.smooth, wine)
plot_list <- list()
for(i in 2:(length(wine)-1)) {
plot_list[[(i-1)]] <- ggplot(data=wine,
aes_string(y=colnames(wine)[i], x="quality")) +
geom_smooth(method=lm) + ylab(colnames(wine)[i])
}
do.call(grid.arrange, plot_list)
tapply(wine$sulphates, wine$quality, mean)
cor(wine$sulpahtes, wine$quality)
cor(wine$sulphates, wine$quality)
ggplot(wine, aes(y=volatile.acidity, x=alcohol, color=quality
) + geom_jitter(alpha=0.5) + facet_wrap(~quality.cut)
ggplot(wine, aes(y=volatile.acidity, x=alcohol, color=quality
)) + geom_jitter(alpha=0.5) + facet_wrap(~quality.cut)
ggplot(wine, aes(y=volatile.acidity, x=alcohol, color=quality.cut
)) + geom_jitter(alpha=0.5) + facet_wrap(~quality.cut)
wine$quality.cut <- cut(wine$quality, breaks=c(0,4,6,10),
labels=c("Bad Wine: (0,4]", "Average Wine: (4, 6]",
"Good Wine: (6, 10]"))
ggplot(wine, aes(y=volatile.acidity, x=alcohol, color=quality
)) + geom_jitter(alpha=0.5) + facet_wrap(~quality.cut)
ggplot(wine, aes(y=pH, x=alcohol, color=quality)) + geom_jitter(alpha=0.5) +
facet_warp(~quality.cut)
ggplot(wine, aes(y=pH, x=alcohol, color=quality)) + geom_jitter(alpha=0.5) +
facet_wrap(~quality.cut)
ggplot(wine, aes(y=volatile.acidity, x=alcohol, size=pH, color=quality.cut)) +
geom_jitter(alpha=0.5)
?scatterplot3d
m4 <- lm(formula = quality ~ alcohol + volatile.acidity + pH+ sulphates, data = wine)
summary(m4)
mtable(m1, m2, m3, m4)
m1 <- lm(formula = quality ~ alcohol, data = wine)
m2 <- lm(formula = quality ~ alcohol + volatile.acidity, data = wine)
m3 <- lm(formula = quality ~ alcohol + volatile.acidity + pH, data = wine)
m4 <- lm(formula = quality ~ alcohol + volatile.acidity + pH+ sulphates, data = wine)
mtable(m1, m2, m3)
mtable(m1, m2, m3, m4)
ggplot(data=wine, aes(x=alcohol, y=volatile.acidity, color=quality.cut)) +
geom_jitter(alpha=0.5) + coord_cartesian(
xlim=c(quantile(wine$alcohol,.01), quantile(wine$alcohol,.99)),
ylim=c(quantile(wine$volatile.acidity,.01),
quantile(wine$volatile.acidity,.99)) ) +
geom_vline(xintercept = 10.75, linetype='dashed', color='brown', alpha=0.5) +
geom_hline(yintercept = 0.5, linetype='dashed', color='brown', alpha=0.5) +
ylab('Volatile Acidity (g / dm^3)') +
xlab('Alcohol (% volume)') +
ggtitle('Wine Quality: Volatile.Acidity v/s Alcohol')
ggplot(data=wine, aes(x=alcohol, y=volatile.acidity, color=quality.cut)) +
geom_jitter(alpha=0.5) + coord_cartesian(
xlim=c(quantile(wine$alcohol,.005), quantile(wine$alcohol,.995)),
ylim=c(quantile(wine$volatile.acidity,.01),
quantile(wine$volatile.acidity,.99)) ) +
geom_vline(xintercept = 10.75, linetype='dashed', color='brown', alpha=0.5) +
geom_hline(yintercept = 0.5, linetype='dashed', color='brown', alpha=0.5) +
ylab('Volatile Acidity (g / dm^3)') +
xlab('Alcohol (% volume)') +
ggtitle('Wine Quality: Volatile.Acidity v/s Alcohol')
cor.plot(m2)
qplot(m2)
panel.lm(m3)
pairs(m2)
pairs.panels(m3)
panel.cor(m2)
ggplot(wine, aes(x = alcohol, y=volatile.acidity), . ~ quality.cut) + geom_point() + geom_smooth(aes(group=quality.cut), method="lm", fullrange=TRUE)
ggplot(wine, aes(x = alcohol, y=volatile.acidity), . ~ quality.cut) + geom_point() + geom_smooth(aes(group=quality.cut, color=quality.cut), method="lm", fullrange=TRUE)
ggplot(wine, aes(x=quality)) + geom_line()
ggplot(wine, aes(y=quality, x=alcohol, colour=quality.cut) + geom_smooth(method=lm)
ggplot(wine, aes(y=quality, x=alcohol, colour=quality.cut)) + geom_smooth(method=lm)
ggplot(wine, aes(y=quality, x=alcohol, colour=quality.cut)) + geom_smooth(method=lm, formula= y ~ 2.336 + 0.321 * x)
ggplot(wine, aes(y=quality, x=alcohol, colour=quality.cut)) + stat_smooth(method=lm, formula= y ~ 2.336 + 0.321 * x)
ggplot(wine, aes(y=quality, x=alcohol, colour=quality.cut)) + stat_smooth(method=lm, formula= y ~ (2.336 + 0.321 * x))
ggplot(wine, aes(y=quality, x=alcohol, colour=quality.cut)) + stat_smooth(method=lm, formula= y ~ 0.321 * x)
wine$predicted_quality <- stats::predict(m3, newdata=wine)
ggplot(wine) + geom_point(aes(x=quality, y = predicted_quality), size = 2, colour = "blue") + geom_smooth(data=df, aes(x=quality, y=predcited_quality), size = 1.5,
colour = "red", se = TRUE, stat = "smooth")
ggplot(wine) + geom_point(aes(x=quality, y = predicted_quality), size = 2, colour = "blue") + geom_smooth(aes(x=quality, y=predcited_quality), size = 1.5,
colour = "red", se = TRUE, stat = "smooth")
ggplot(wine) + geom_point(aes(x=quality, y = predicted_quality), size = 2, colour = "blue") + geom_smooth(aes(x=quality, y=predicted_quality), size = 1.5,
colour = "red", se = TRUE, stat = "smooth")
ggplot(wine) + geom_point(aes(x=quality, y = predicted_quality), size = 2, colour = "blue") + geom_smooth(method=lm)
ggplot(wine, aes(x=quality, y=predicted_quality, color=quality.cut)) + geom_smooth(metod=lm)
ggplot(wine, aes(x=quality, y=predicted_quality, color=quality.cut)) + geom-smooth()
ggplot(wine, aes(x=quality, y=predicted_quality, color=quality.cut)) + geom_smooth()
ggplot(wine, aes(x=quality, y=predicted_quality, color=quality.cut)) + geom_point()
ggplot(wine, aes(x=quality, y=predicted_quality, color=quality.cut)) + geom_line()
?curve
?wireframe
wireframe(quality~alcohol * volatile.acidity, data=wine)
cloud(quality~alcohol * volatile.acidity, data=wine)
cloud(quality~alcohol * volatile.acidity, data=wine, preety=T)
contourplot(quality~alcohol * volatile.acidity, data=wine, preety=T)
levelplot(quality~alcohol * volatile.acidity, data=wine, preety=T)
splom(wine)
cloud(quality~alcohol * volatile.acidity|quality.cut, data=wine, pretty=T)
ggplot(wine, aes(y=2.336 + 0.321 * alcohol - 1.965 * voaltile.acidity + 0.223 * pH, x=quality)) + geom_point()
ggplot(wine, aes(y=2.336 + 0.321 * alcohol - 1.965 * volatile.acidity + 0.223 * pH, x=quality)) + geom_point()
cor(wine[2:12], wine$quality)
cor.plot(cor(wine[2:12], wine$quality))
cor.plot(cor(wine[2:13], wine$quality))
?cor
cor.plot(cor(wine[2:13], c(wine$quality, wine$quality.cut))
)
cor(wine[2,13], quality.cut)
cor(wine[2,13], wine$quality.cut)
cor(wine[2,13], as.numeric(wine$quality.cut))
cor.plot(melt(cor(wine[2:13], wine$quality)))
cor(wine[2:12], wine$quality)
cm <- cor(wine[2:12], wine$quality)
cm
as.matrix(cm)
cmf <-cor(wine[2:13])
dim(cmf)
cmf[12,]
cor.plot(cmf[12,])
cor.plot(cmf[11:12,])
cor.plot(cmf)
cor.plot(cmf[c(2,10,12,13),])
cor.plot(cmf[c(1,9,11,12),])
cor.plot(cmf[c(1,9,11,12),], labels=T)
?cor.plot
cor.plot(cmf[c(1,9,11,12),], show.legend=T, numbers=T, labels=colnames(wine)[2:13])
cor.plot(cmf[c(1,9,11,12),], show.legend=T, numbers=T)
?heatmap
heatmap(cm)
heatmap(cmf[11:12,])
heatmap(cmf[11:12,], Rowv=NULL)
heatmap(cmf[11:12,], Rowv=NULL, Colv=NULL)
image(cm)
?image
image(as.matrix(cm))
image(cm)
heatmap(cmf)
heatmap(cm, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
heatmap(cmf, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
heatmap(cmf[11:12,], Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
>>>>>>> 9903a3831c3f9f00589f4be3919651628e11c820
