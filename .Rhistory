<<<<<<< HEAD
=======
with(subset(pf, age<=70), cor.test(age, friend_count, method="pearson"))
ggplot(data=pf, aes(x=www_likes_recieved, y=likes_recieved)) + geom_point()
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point()
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point() + coord_cartesian(xlim=c(0,50000), ylim=c(0,50000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point() + coord_cartesian(xlim=c(0,15000), ylim=c(0,30000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/20) + coord_cartesian(xlim=c(0,15000), ylim=c(0,30000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,15000), ylim=c(0,30000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,10000), ylim=c(0,20000))
ggsave("facebook_wwwlikes_vs_likes.jpg")
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,quantile(pf$www_likes_received, 0.95)), ylim=c(0,quantile(pf$likes_receieved, 0.95)))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,quantile(pf$www_likes_received, 0.95)), ylim=c(0,quantile(pf$likes_received, 0.95)))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,quantile(pf$www_likes_received, 0.95)), ylim=c(0,quantile(pf$likes_received, 0.95))) + geom_smooth(method='lm', color='red')
ggsave("facebook_wwwlikes_vs_likes.jpg")
cor.test(pf$www_likes_received, pf$likes_received)
install.packages('alr3')
library(alr3)
dataset(Mitchell)
load(Mitchell)
data(Mitchell)
?Mitchell
head(Mitchell)
summary(Mitchell)
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point()
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(data=Mictehll, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(aes(x=Month, y=Temp), data=Mitchell) + geom_point(color='orange') + geom_line(stat='summary', fun.y=mean) + geom_line(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_line(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_line(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggplot(aes(x=Month, y=Temp), data=Mitchell) + geom_point(color='orange') + geom_point(stat='summary', fun.y=mean) + geom_point(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_point(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_point(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggplot(data=Mictehll, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(data=Mitchell, aes(x=Month/12, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(1,12,1)) + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(1,240,12)) + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(1,240,12)) + geom_smooth(method='lm', color='red')
summary(Mitchell)
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(0,203,12)) + geom_smooth(method='lm', color='red')
summary(pf)
pf$age_with_months <- pf$age + (1 - pf$dob_month/12)
head(pf$age_with_months)
head(pf)
pf.fc_by_age_months <- pf %>% group_by(age_with_months) %>% summarise(friend_count_mean = mean(friend_count), friend_count_median = median(friend_count), n=n())
head(pf)
head(pf.fc_by_age_months)
tail(pf.fc_by_age_months)
ggplot(data=subset(pf.fc_by_age_months, age < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
ggplot(data=subset(pf.fc_by_age_months, age_with_months < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
ggsave("facebook_friendcount_mean_vs_age_with_months.jpg")
p2 <- ggplot(data=subset(pf.fc_by_age_months, age_with_months < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
p1 <- ggplot(data=subset(pf, age < 71), aes(x=age, y=friend_count_mean)) + geom_line()
library(gridExtra)
grid.arrange(p2,p1, ncol=1)
p1 <- ggplot(data=subset(pf.fc_by_age, age < 71), aes(x=age, y=friend_count_mean)) + geom_line()
grid.arrange(p2,p1, ncol=1)
ggsave("facebook_friendcount_mean_vs_age_months_side_by_side.jpg")
p0 <- ggplot(data=subset(pf, age <71), aes(x=round(age/5)*5, y=friend_count) + geom_line(stat='summary', fun.y=mean)
)
p0 <- ggplot(data=subset(pf, age <71), aes(x=round(age/5)*5, y=friend_count)) + geom_line(stat='summary', fun.y=mean)
grid.arrange(p2,p1, p0, ncol=1)
ggsave("facebook_friendcount_mean_vs_age_months_side_by_side.jpg")
p2 <- p2 + geom_smooth()
p1 <- p1 + geom_smooth()
grid.arrange(p2,p1, p0, ncol=1)
ggsave("facebook_friendcount_mean_vs_age_months_side_by_side.jpg")
?diamonds
?Diamonds
dir()
df <- read.delim('diamondsbig.csv')
summary(df)
em(df)
rm(df)
data(diamonds)
library(ggplot2)
data(diamonds)
data(diamonds)
data(?)
?data
data()
data(package=ggplot2)
data(package = .packages(all.available = TRUE))
?ggplot2
?ggplot
library(ggplot)
>>>>>>> 55e2db24b145c5cb8b4daa4b0dab2d9172c392bf
library(ggplot2)
install(ggplot2)
install('ggplot2')
install.packages("ggplot2")
library(ggplot2)
data(diamonds)
summary(diamonds)
?diamonds
qplot(data=diamonds, x=price)
qplot(data=diamonds, x=price, binwidth=100)
qplot(data=diamonds, x=price, binwidth=500)
qplot(data=diamonds, x=price, binwidth=1000)
qplot(data=diamonds, x=price, binwidth=300)
summary(diamonds$price)
length(diamons$price < 500)
length(diamonds$price < 500)
length(diamonds$price < 250)
length(diamonds$price >= 15000)
length(subset(diamonds, price < 500))
length(subset(diamonds, price < 350))
length(subset(diamonds, price < 250
)
)
length(subset(diamonds, price >= 15000))
length(diamonds[diamonds$price < 500,])
diamonds[diamonds$price < 500,]
dim(diamonds)
dim(diamonds[diamonds$price < 500,])
length(diamonds[dianmonds$price < 500, 8])
length(diamonds[diamonds$price < 500, 8])
length(diamonds[diamonds$price < 250, 8])
length(diamonds[diamonds$price >= 15000, 8])
qplot(data=diamonds, x=price, binwidth=100, xlim=c(0, 1000))
qplot(data=diamonds, x=price, binwidth=100, xlim=c(300, 1000))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1000))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1500))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="blue")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="red")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="red", fill="grey")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), fill="blue")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), fill="green")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), fill="green")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour="green")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200)) + geom_histogram(colour="red")
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red"))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red")) + scale_x_continuous(break=c(300,1200,50))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red")) + scale_x_continuous(breaks=c(300,1200,50))
qplot(data=diamonds, x=price, binwidth=50, colour=I("red")) + scale_x_continuous(lim=c(300,1200), breaks=c(300,1200,50))
qplot(data=diamonds, x=price, binwidth=50, xlim=c(300, 1200), colour=I("red"))
ggsave('priceHistogram.jpg')
qplot(data=diamonds, x=price, color=cut)
qplot(data=diamonds, x=price) + facet_grid(. ~ cut)
by(diamonds, price, cut, summary)
by(diamonds$price, cut, summary)
?by
by(diamonds, cut, summary)
by(diamonds, diamonds$price, diamonds$cut, summary
)
by(diamonds, diamonds$price, diamonds$cut, summary)
by(diamonds, diamonds$cut, summary)
by(diamonds[,c(2,7)], diamonds$cut, summary)
by(diamonds$price, diamonds$cut, summary)
summary(diamonds$price)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, max, digits=max(getOption('digits')))
digits
max(getOption('digits'))
qplot(x = price, data = diamonds) + facet_wrap(~cut)
?facet_wrap
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales="free_y")
qplot(x = price, data = diamonds) + facet_wrap(~cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=50) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=300) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + x_scale_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=100) + x_scalelog10() + facet_wrap(~cut, scales="free_y")
?x_scale
qplot(x = price/carat, data = diamonds, binwidth=100) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=10) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=1) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=1000) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=500) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.5) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.1) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.05) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.075) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.1) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(x = price/carat, data = diamonds, binwidth=0.075) + scale_x_log10() + facet_wrap(~cut, scales="free_y")
qplot(data=diamonds, x=cut, y=price, geom="boxplots")
qplot(data=diamonds, x=cut, y=price, geom="boxplot")
qplot(data=diamonds, x=cut, y=price, geom="boxplot", ylim=c(200,7000))
qplot(data=diamonds, x=cut, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,5000))
qplot(data=diamonds, x=cut, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,6000))
qplot(data=diamonds, x=cut, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,7000))
qplot(data=diamonds, x=cut, y=clarity, geom="boxplot")
qplot(data=diamonds, y=price, x=clarity, geom="boxplot")
qplot(data=diamonds, x=clarity, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,7000))
qplot(data=diamonds, y=price, x=color, geom="boxplot")
qplot(data=diamonds, x=color, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,7000))
qplot(data=diamonds, x=color, y=price, geom="boxplot") + coord_cartesian(ylim=c(200,8000))
by(diamonds$price, diamonds$color, summary)
by(diamonds$price, diamonds$color, iqr
)
?IQR
by(diamonds$price, diamonds$color, IQR)
?diamonds
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot") + coord_cartesian(ylim=c(200,8000))
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot") + coord_cartesian(ylim=c(2000,6000))
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot")
qplot(data=diamonds, x=color, y=price/carat, geom="boxplot") + coord_cartesian(ylim=c(2000,6000))
by(diamonds$price/diamonds$carat, diamonds$color, IQR)
by(diamonds$price/diamonds$carat, diamonds$color, summary)
qplot(data=diamonds, x=carat, geom"freqpoly")
qplot(data=diamonds, x=carat, geom"freqpol")
qplot(data=diamonds, x=carat, geom="freqpoly")
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.1)
qplot(data=diamonds, x=carat, geom="freqpoly")
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.05)
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.025)
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01)
summary(diamonds$carat)
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + cartesian_coord(xlim=c(1,5))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(1,5))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(2,5))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(2,5), ylim=(0,500))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01) + coord_cartesian(xlim=c(2,5), ylim=c(0,500))
qplot(data=diamonds, x=carat, geom="freqpoly", binwidth=0.01)
by(diamonds$carat, diamonds$carat, sum)
by(diamonds$carat, diamonds$carat, length)
by(diamonds$carat, diamonds$carat, dim)
by(diamonds$carat, diamonds$carat, length)
by(diamonds$carat, diamonds$carat, length) > 2000
by(diamonds$carat, diamonds$carat, length) > 2000 == TRUE
d1 <- by(diamonds$carat, diamonds$carat, length)
dim(D1)
dim(d1)
d1
summary(d1)
d1 > 2000
d1
d1[d1>2000,]
d1[d1>2000]
dplyr::tbl_df(diamonds)
load(dplyr)
load('dplyr')
install.packages("dplyr")
install.packages("tidyr")
load(dplyr)
load('dplyr')
load('tidyr')
?load
?package
?install
?package
library(dplyr)
library('dplyr')
library()
library(plyr)
library(tidyr)
tbl(diamonds)
tbl_df(diamonds)
plyr::tbl_df(diamonds)
dplyr::tbl_df(diamonds)
?plyr
library(dplyr)
?dplyr
install.packages("dplyr")
library(dplyr)
dplyr::tbl_df(diamonds)
getwd()
?read.table
install.packages("xlsx")
?xlsx
library(xlsx)
?xlsx
df_cell <- read.xlsx('cell phone total.xlsx')
df_cell <- read.xlsx('cell phone total.xlsx',1)
names(df_cell)
summary(df_cell$X2011)
by(df_cell$X2011, df_Cell$Mobile.cellular.subscriptions..total.number, summary)
by(df_cell$X2011, df_cell$Mobile.cellular.subscriptions..total.number, summary)
qplot(data=df_cell, y=X2011, x=Mobile.cellular.subscriptions..total.number)
df1 <- subset(df_cell, df$X2011 > 100000)
?subset
df1 <- subset(df_cell, X2011 > 100000)
df1 <- subset(df_cell, X2011 > 1000000)
df[1:10,1:5]
df1[1:10,1:5]
df1[1:10,c(1,47,48)]
df1[df1$Mobile.cellular.subscriptions..total.number == "India",]
df2 <- df_cell[df_cell$Mobile.cellular.subscriptions..total.number == "India",]
qplot(data=df2, x=X2011, geom="bar")
librray(ggplot)
library(ggplot2)
library(GGally)
library(scales)
install.packages('memisc')
library(dplyr)
library(reshape2)
librray(gridExtra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
library(ggplot2)
librray(scales)
library(scales)
library(GGally)
library(dplyr)
library(reshape2)
library(tidyr)
install.packages("gridExtra")
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
head(sort(table(diamonds$carat), dcreasing=T))
head(sort(table(diamonds$carat), decreasing=T))
head(sort(table(diamonds$price), decreasing=T))
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_jitter(alpha=1/10)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_jitter(alpha=1/50)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_jitter(alpha=1/100)
ggplot(aes(carat, price), data = diamonds) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_jitter(alpha=1/100)
ggplot(aes(carat, price), data = diamonds) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_jitter(alpha=1/10)
ggplot(aes(carat, price), data = diamonds) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_jitter(alpha=1/20)
ggplot(aes(carat, price), data = diamonds) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat') +geom_point(alpha=1/2, size=0.75, position="jitter")
ggplot(aes(x = carat, y = price, color=clarity), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = carat, y = price, color = cut), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Cut', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Cut')
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Color’)
ggplot(aes(x = carat, y = price, color = diamonds$color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Color’)
)
<<<<<<< HEAD
)
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Cut', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Cut')
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Color')
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color',
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Color')
m1 <- lm(I(log(price)) ~ I(carat^(1/3)), data = diamonds)
m2 <- update(m1, ~ . + carat)
m3 <- update(m2, ~ . + cut)
m4 <- update(m3, ~ . + color)
m5 <- update(m4, ~ . + clarity)
mtable(m1, m2, m3, m4, m5)
library(mtable)
install.packages("memisc")
getwd()
setwd("github/eda")
load("BigDiamonds.rda")
m1 <- lm(I(log(price)) ~ I(carat^(1/3)), data = diamondsbig)
m2 <- update(m1, ~ . + carat)
m3 <- update(m2, ~ . + cut)
m4 <- update(m3, ~ . + color)
m5 <- update(m4, ~ . + clarity)
bluenileDiamond = data.frame(carat=1.00, cut="V.Good", color="I", clarity="VS1")
blueNileEstimate = predict(m5, newdata=bluenileDiamond, interval="prediction", level=.95)
exp(bluenileEstimate)
exp(blueNileEstimate)
=======
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year, fill=country)) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphonetotal_by_country.jpg")
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year, colour=country)) + geom_line(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphone_total_bycountry_line.jpg")
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year)) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011)) + facet_wrap(~country, scales="free_y")
ggsave("cellphonetotal_by_country_side_by_side.jpg")
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphonetotal_by_year.jpg")
pf.fc_by_age_gender <- pf %>% group_by( age, gender ) %>%
summarise( mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n() )
head(pf.fc_by_age_gender)
ggplot(data=pf.fc_by_age_gender, aes(y=median_friend_count, x=age)) + geom_line(aes(color=gender))
install.packages('reshape2')
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
library(reshape2)
install.packages('reshape2')
install.packages("reshape2")
install.packages("reshape2")
remove.packages('reshape2')
library(reshape2)
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcats(pf.fc_by_age_gender, age~gender, value.var='median_friend_count')
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender, age~gender, value.var='median_friend_count')
head(pf.fc_by_age_gender.wide)
pf.fc_by_age_gender.wide <- pf.fc_by_age_gender.wide[,1:3]
head(pf.fc_by_age_gender.wide)
ggplot
library(ggplot2)
View(pf.fc_by_age_gender.wide)
ggplot(data=pf.fc_by_age_gender.wide, aes=(x=age)) +
geom_line(aes(y=female, colour = "female")) + geom_line(aes(y=male, colour="male"))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male"))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male")) + geom_hline(aes(yintercept=1, linetype=2))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male")) + geom_hline(aes(yintercept=1))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male")) + geom_hline(aes(yintercept=1), linetype=2)
pwd()
dir()
getwd()
savehistory("~/GitHub/EDA/history_aug14.R")
getwd()
dir(*.rmd)
dir()
dir("*.rmd")
?dir
dir(.,"*.rmd")
dir(path=".",pattern="*.rmd")
wine <- read.csv("./wineQualityWhites.csv")
summary(wine)
library(psych)
describe(wine)
?describe
describe(wine, skew=F)
describe(wine, skew=F)
describe(wine, skew=F, check=T)
describe(wine)
describe(wine[2:12], skew=F)
cor(wine[,-12])
cor(wine[,-12], method="spearman")
pairs(WhiteWine[,-12], gap=0, pch=19, cex=0.4, col="darkblue")
pairs(wine[,-12], gap=0, pch=19, cex=0.4, col="darkblue")
title(sub="Scatterplot of Chemical Attributes", cex=0.8)
+++
?cor
describeBy(wine, group=quality)
describeBy(wine, group=wine$quality)
?stats
statsBy(wine)
statsBy(wine, group=wine$quality)
pairs.panel(wine)
pairs.panels(wine)
lowerCor(wine)
?lowerCor
lowerMat(cor(wine))
tabelF(wine)
tableF(wine)
cor(wine)
cor(wine, digits=2)
?cor
lowerMat(cor(wine))
lowerCor(wine)
savehistory("~/GitHub/EDA/History-sep24.R")
summary(wine)
describe(wine[2:12], skew=F)
lowerCor(wine)
pairs.panels(wine)
library(psych)
wine <- read.csv("./wineQualityWhites.csv")
summary(wine)
describe(wine[2:12], skew=F)
lowerCor(wine)
pairs.panels(wine)
?cor
names(which.max(table(wine$quality)))
table(wine$quality)
summary(wine$quality)
table(wine$quality)
iqr(wine$quality)
IQR(wine$quality)
sum(wine$quality < 3.5)
sum(reds$quality > 7.5)
sum(wine$quality > 7.5)
200/4998
200/4898
?IQR
ggplot(wine, aes(x=quality)) + geom_box()
library(ggplot)
library(ggplot2)
ggplot(wine, aes(x=quality)) + geom_box()
ggplot(wine, aes(x=quality)) + geom_boxplot()
ggplot(wine, aes(x=factor(wine$quality), y=quality) + geom_boxplot()
ggplot(wine, aes(x=factor(wine$quality), y=quality)) + geom_boxplot()
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='red',alpha=.25)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dash', alpha=.25) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dash', alpha=.25) +
geom_vline(xintercept = mean(wine$quality), linetype='longdash', color='blue', alpha=.25)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='red',alpha=.25)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.25) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.25) +
geom_vline(xintercept = mean(wine$quality), linetype='longdash', color='blue', alpha=.25)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='red',alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75) +
geom_vline(xintercept = mean(wine$quality), linetype='longdash', color='blue', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10,1)) +
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='red',alpha=.75)+
geom_vline(xintercept = mean(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(aes(xintercept = quality.mean), linetype='longdash', color='red',alpha=.75)+
geom_vline(xintercept = mean(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(aes(xintercept = wine$quality.mean), linetype='longdash', color='red',alpha=.75)+
geom_vline(xintercept = mean(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(aes(xintercept = wine$quality.mean), linetype='longdash', color='red',alpha=.75)+
geom_vline(aes(xintercept = wine$quality.median), linetype='longdash', color='blue', alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(aes(xintercept = mean(wine$quality), linetype='longdash', color='red',alpha=.75)+
geom_vline(aes(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(aes(xintercept = quantile(wine$quality, 0.25)), linetype='dashed', alpha=.75) +
geom_vline(aes(xintercept = quantile(wine$quality, 0.75)), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(aes(xintercept = mean(wine$quality), linetype='longdash', color='red',alpha=.75)+
geom_vline(aes(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(aes(xintercept = quantile(wine$quality, 0.25)), linetype='dashed', alpha=.75) +
geom_vline(aes(xintercept = quantile(wine$quality, 0.75)), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
coord_cartesian(xlim=c(0,10)) +
geom_vline(aes(xintercept = mean(wine$quality)), linetype='longdash', color='red',alpha=.75)+
geom_vline(aes(xintercept = median(wine$quality)), linetype='longdash', color='blue', alpha=.75)+
geom_vline(aes(xintercept = quantile(wine$quality, 0.25)), linetype='dashed', alpha=.75) +
geom_vline(aes(xintercept = quantile(wine$quality, 0.75)), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=factor(wine$quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red, alpha=.75)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=factor(wine$quality))) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red, alpha=.75)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75)+
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=factor(wine$quality))) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red, alpha=.75)
ggplot(data=wine, aes(x=factor(wine$quality))) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red, alpha=.75) +
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75)
ggplot(data=wine, aes(x=factor(wine$quality))) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red', alpha=.75)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=wine$quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red', alpha=.75)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.25), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=wine$quality)) +
geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red', alpha=.75)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.25) - 1.5 * IQR(wine$quality), linetype='dashed', alpha=.75) +
geom_vline(xintercept = quantile(wine$quality, 0.75) + 1.5* IQR(wine$quality), linetype='dashed', alpha=.75)
ggplot(data=wine, aes(x=wine$quality)) + geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$quality, 0.25) - 1.5 * IQR(wine$quality),
linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$quality, 0.75) + 1.5 * IQR(wine$quality),
linetype='dashed', alpha=.5)
ggsave("wine_quality_historgram.jpg")
ggplot(data=wine, aes(x=quality)) + geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(quality), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$quality, 0.25) - 1.5 * IQR(wine$quality),
linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$quality, 0.75) + 1.5 * IQR(wine$quality),
linetype='dashed', alpha=.5)
ggplot(data=wine, aes(x=quality)) + geom_bar(binwidth=1, color='black', fill='green') +
geom_vline(xintercept = mean(wine$quality), linetype= 'longdash', color='red', alpha=.5)+
geom_vline(xintercept = median(wine$quality), linetype='longdash', color='blue', alpha=.5) +
geom_vline(xintercept = quantile(wine$quality, 0.25) - 1.5 * IQR(wine$quality),
linetype='dashed', alpha=.5) +
geom_vline(xintercept = quantile(wine$quality, 0.75) + 1.5 * IQR(wine$quality),
linetype='dashed', alpha=.5)
savehistory("~/GitHub/EDA/history-sept25.R")
>>>>>>> 55e2db24b145c5cb8b4daa4b0dab2d9172c392bf
