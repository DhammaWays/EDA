qplot(data=df3, y=CellPhoneTotal, x=year) + geom_bar(stat="identity") + coord_cartesian(xlim=c(1990,2011))
ggsave("cellphones_by_year_bar_across_all_countries.jpg")
savehistory("~/GitHub/EDA/history.R")
summary(df3)
dim(df3)
dim(df2)
?by
by(df3, CellPhoneTotal, year, mean)
by(df3, df3$CellPhoneTotal, df3$year, mean)
by(df3, df3$CellPhoneTotal, df3$year, sum)
by(df3$CellPhoneTotal, df3$year, sum)
by(df3$CellPhoneTotal, df3$year, mean)
by(df3$CellPhoneTotal, year, mean)
by(df3$CellPhoneTotal, df3$year, summary)
dir(*.csv)
dir()
dfbday <- read.csv("birthdaysExample.csv")
?read.csv
row.names(dfbday)
summary(dfbday)
dfbday <- read.csv("birthdaysExample.csv", colClasses="Date")
dfbday <- read.csv("birthdaysExample.csv", colClasses=as.Date)
dfbday <- read.csv("birthdaysExample.csv", as.is=as.Date)
dfbday <- read.csv("birthdaysExample.csv", as.is=c(as.Date))
summary(dfbday)
dfbday <- read.csv("birthdaysExample.csv", colClasses=c("Date"))
dfbday <- read.csv("birthdaysExample.csv")
dfbday$date <- as.Date(dfbday$date)
?as.Date
dfbday$date <- as.Date(dfbday$date, "%m/%d/%Y")
dfbday <- read.csv("birthdaysExample.csv")
dfbday$dates <- as.Date(dfbday$dates, "%m/%d/%Y")
summary(dfbday)
dfbday <- read.csv("birthdaysExample.csv")
dfday$dates <- strptime(dfbday$dates, "%m/%d/%Y")
dfbday$dates <- strptime(dfbday$dates, "%m/%d/%Y")
?strptime
dfbday <- read.csv("birthdaysExample.csv")
?read.csv
dfbday <- read.csv("birthdaysExample.csv", colClasses="Date", "%m/%d/%Y")
dfbday <- read.csv("birthdaysExample.csv", colClasses="character")
dfbday$dates <- as.Date(dfbday$dates, "%D")
dfbday <- read.csv("birthdaysExample.csv", colClasses="character")
dfbday$dates <- as.Date(dfbday$dates, "%m/%d/%y")
summary(dfbday)
dim(dfbday)
?Date
dfbday[1]
dfbday[1,1]
dfbday[1,1]$day
dfbday[1,1]$wday
(dfbday[1,1])$wday
dfbday[1,1].wday()
wday(dfbday[1,1])
weekdays(dfbday[1,1])
months(dfbday[1,1])
years(dfbday[1,1])
year(dfbday[1,1])
days(dfbday[1,1])
names(dfbday[1,1])
dfbday[1,1] - dfbday[1,2]
dfbday[1,1] + 10
dfbday[1,1]
dfbday$dates <- as.POSIXlt(dfbday$dates)
names(dfbday[1,1])
dfbday[1,1]$days
dfbday[1,1]$wday
dfbday[1,1]$month
dfbday[1,1]$months
dfbday[1,1]$year
dfbday[1,1]$mday
dfbday[1,1]$mon
dbfday[1,1] + 2
dfbday[1,1] + 2
dfbday <- read.csv("birthdaysExample.csv", colClasses="character")
dfbday$dates <- as.Date(dfbday$dates, "%m/%d/%y")
weekdays(dfbday[1,1])
?weekdays
mybday <- Date("11/02/2014", "%m%d%y")
?Date
mybday <- as.Date("2014-11-02")
mybday
dfbday[1,1] == mybday
dfbday[dfbday$dates == mybday,]
length(dfbday[dfbday$dates == mybday,])
by(dfbday$dates, months(dfbday$dates), max)
by(dfbday$dates, months(dfbday$dates), summary)
by(dfbday$dates, months(dfbday$dates), length)
by(dfbday$dates, months(dfbday$dates), function(x) max(length(x)))
max(by(dfbday$dates, months(dfbday$dates), length))
?max
pmax(by(dfbday$dates, months(dfbday$dates), length))
bday_by_month <- by(dfbday$dates, months(dfbday$dates), length)
names(bday_by_month)
max(bday_by_month)
names(max(bday_by_month))
bday_by_month <- as.data.frame(by(dfbday$dates, months(dfbday$dates), length))
which.max(bday_by_month)
?which
which(max(bday_by_month))
bday_by_month <- by(dfbday$dates, months(dfbday$dates), length)
max(bday_by_month)
which.max(bday_by_month)
qplot(data=dfbday, x=months(dfbday$dates))
ggsave("birthdays_by_month.jpg")
qplot(data=dfbday, x=weekdays(dfbday$dates))
ggsave("birthdays_by_weekday.jpg")
everyday.bday <- seq(as.Date("2014-01-01"), length=365, by=1)
?seq
everyday.bday <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"))
everyday.bday <- seq(from=as.Date("2014-01-01"), to=as.Date("2014-12-31"))
everyday.bday <- seq.Date(from=as.Date("2014-01-01"), to=as.Date("2014-12-31"))
everyday.bday <- seq.Date(from=as.Date("2014-01-01"), to=as.Date("2014-12-31"), by="day")
names(everyday.bday)
everyday.bday
length(everyday.bday)
everyday.bday <- seq.Date(from=as.Date("2014-01-01"), to=as.Date("2014-12-31"), by="day")
length(everyday.bday)
dfbday[1,1] %in% everyday.bday
length(dfbday$dates %in% everyday.bday)
length(everyday.bday %in% dfbday$dates)
everyday.bday[1] %in% dfbday$dates
dfbday[dfbday$dates == everyday.bday[1], ]
dfbday[dfbday$dates == everyday.bday[2], ]
dfbday[dfbday$dates == everyday.bday[3], ]
dfbday[dfbday$dates == everyday.bday[4], ]
everyday.bday %in% dfbday$dates
sum(everyday.bday %in% dfbday$dates)
sum(!everyday.bday %in% dfbday$dates)
summary(dfbday)
dim(dfbday)
bday_by_day <- by(dfbday$dates, weekdays(dfbday$dates), length)
max(bday_by_day)
which.max(bday_by_day)
which(!everyday.bday %in% dfbday$dates))
which(!everyday.bday %in% dfbday$dates)
which.names(!everyday.bday %in% dfbday$dates)
everyday.bday[!everyday.bday %in% dfbday$dates]
dir()
pf <- read.delim('pseudo_facebook.tsv')
rm(df1)
rm(dfbday)
rm(df3)
em(df2)
rm(pf1)
rm(rdata)
rm(v)
rm(df2)
rm(dfcell)
rm(stinfo)
qplot(age, friends_Count, data=pf)
library(ggplot)
library(ggplot2)
qplot(age, friends_Count, data=pf)
qplot(age, friends_count, data=pf)
qplot(age, friend_count, data=pf)
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point()
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20) + xlim(13,90)
ggplot(aes(x=age, y=friend_count), data=pf) + geom_jitter(alpha=1/20) + xlim(13,90)
ggplot(aes(x=age, y=friend_count), data=pf) + geom_jitter(alpha=1/20) + xlim(13,90) + coord_trans(y="sqrt")
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20) + xlim(13,90) + coord_trans(y="sqrt")
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0)) + xlim(13,90) + coord_trans(y="sqrt")
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0)) + xlim(13,90) + coord_trans(y="sqrt")
ggplot(aes(x=age, y=friendships_initiated), data=pf)
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point()
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point() + xlim(13,90)
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha=1/20) + xlim(13,90)
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha=1/20, position=position_jitter(h=0)) + xlim(13,90)
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha=1/20, position=position_jitter(h=0)) + xlim(13,90) + coord_trans(y="sqrt")
ggsave("facebook_scatter_friendships_initiated_vs_age.jpg")
library(dplyr)
pf.fc_by_age <- pf %>% group_by(age) %>% summarise(friend_count_mean = mean(friend_Count), friend_count_median = median(friend_count), n=n())
pf.fc_by_age <- pf %>% group_by(age) %>% summarise(friend_count_mean = mean(friend_count), friend_count_median = median(friend_count), n=n())
head(pf.fc_by_age)
ggplot(data=pf.fc_by_age, aes(x=age, y=friend_count_mean)) + geom_line()
ggplot(data=pf.fc_by_age, aes(x=age, y=friend_count_mean)) + geom_line() + xlim(13,90)
tail(pf.fc_by_age)
ggsave("facebook_mean_friendcount_by_age.jpg")
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0), color='orange') + xlim(13,90) + coord_trans(y="sqrt") + geom_line(stat='summary', funy=mean)
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0), color='orange') + xlim(13,90) + coord_trans(y="sqrt") + geom_line(stat='summary', fun.y=mean)
ggsave(facebook_friendcount_by_age_summary_mean_overlayed.jpg"")
ggsave("facebook_friendcount_by_age_summary_mean_overlayed.jpg"")
""
ggsave("facebook_friendcount_by_age_summary_mean_overlayed.jpg)
""
"
ggsave("facebook_friendcount_by_age_summary_mean_overlayed.jpg")
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0), color='orange') + xlim(13,90) + coord_trans(y="sqrt") + geom_line(stat='summary', fun.y=mean) + geom_line(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_line(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_line(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggsave("facebook_friendcount_by_age_summary_stat_overlayed.jpg")
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0), color='orange') + coord_cartesian(xlim = c(13, 90)) + coord_trans(y="sqrt") + geom_line(stat='summary', fun.y=mean) + geom_line(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_line(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_line(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggsave("facebook_friendcount_by_age_summary_stat_overlayed.jpg")
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20, positon=position_jitter(h=0), color='orange') + coord_cartesian(xlim = c(13, 90), ylim=c(0, 1000)) + geom_line(stat='summary', fun.y=mean) + geom_line(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_line(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_line(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggsave("facebook_friendcount_by_age_summary_stat_overlayed.jpg")
?cor.test
cor.test(pf$age, pf$friend_count, method="peasrson")
cor.test(pf$age, pf$friend_count, method="pearson")
cor.test(pf$age, pf$friend_count)
?with
with(pf, cor.test(age, friend_count, method="pearson"))
with(pf[age<70,], cor.test(age, friend_count, method="pearson"))
with(pf[pf$age<70,], cor.test(age, friend_count, method="pearson"))
with(subset(pf, age<70), cor.test(age, friend_count, method="pearson"))
with(subset(pf, age<=70), cor.test(age, friend_count, method="pearson"))
ggplot(data=pf, aes(x=www_likes_recieved, y=likes_recieved)) + geom_point()
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point()
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point() + coord_cartesian(xlim=c(0,50000), ylim=c(0,50000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point() + coord_cartesian(xlim=c(0,15000), ylim=c(0,30000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/20) + coord_cartesian(xlim=c(0,15000), ylim=c(0,30000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,15000), ylim=c(0,30000))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,10000), ylim=c(0,20000))
ggsave("facebook_wwwlikes_vs_likes.jpg")
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,quantile(pf$www_likes_received, 0.95)), ylim=c(0,quantile(pf$likes_receieved, 0.95)))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,quantile(pf$www_likes_received, 0.95)), ylim=c(0,quantile(pf$likes_received, 0.95)))
ggplot(data=pf, aes(x=www_likes_received, y=likes_received)) + geom_point(alpha=1/10) + coord_cartesian(xlim=c(0,quantile(pf$www_likes_received, 0.95)), ylim=c(0,quantile(pf$likes_received, 0.95))) + geom_smooth(method='lm', color='red')
ggsave("facebook_wwwlikes_vs_likes.jpg")
cor.test(pf$www_likes_received, pf$likes_received)
install.packages('alr3')
library(alr3)
dataset(Mitchell)
load(Mitchell)
data(Mitchell)
?Mitchell
head(Mitchell)
summary(Mitchell)
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point()
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(data=Mictehll, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(aes(x=Month, y=Temp), data=Mitchell) + geom_point(color='orange') + geom_line(stat='summary', fun.y=mean) + geom_line(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_line(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_line(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggplot(aes(x=Month, y=Temp), data=Mitchell) + geom_point(color='orange') + geom_point(stat='summary', fun.y=mean) + geom_point(stat='summary', fun.y=quantile, probs=0.1, linetype=2, color='blue') + geom_point(stat='summary', fun.y=quantile, probs=0.5, color='green') + geom_point(stat='summary', fun.y=quantile, probs=0.9, linetype=2, color='red')
ggplot(data=Mictehll, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(data=Mitchell, aes(x=Month/12, y=Temp)) + geom_point() + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(1,12,1)) + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(1,240,12)) + geom_smooth(method='lm', color='red')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(1,240,12)) + geom_smooth(method='lm', color='red')
summary(Mitchell)
ggplot(data=Mitchell, aes(x=Month, y=Temp)) + geom_point() + scale_x_discrete(breaks = seq(0,203,12)) + geom_smooth(method='lm', color='red')
summary(pf)
pf$age_with_months <- pf$age + (1 - pf$dob_month/12)
head(pf$age_with_months)
head(pf)
pf.fc_by_age_months <- pf %>% group_by(age_with_months) %>% summarise(friend_count_mean = mean(friend_count), friend_count_median = median(friend_count), n=n())
head(pf)
head(pf.fc_by_age_months)
tail(pf.fc_by_age_months)
ggplot(data=subset(pf.fc_by_age_months, age < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
ggplot(data=subset(pf.fc_by_age_months, age_with_months < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
ggsave("facebook_friendcount_mean_vs_age_with_months.jpg")
p2 <- ggplot(data=subset(pf.fc_by_age_months, age_with_months < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
p1 <- ggplot(data=subset(pf, age < 71), aes(x=age, y=friend_count_mean)) + geom_line()
library(gridExtra)
grid.arrange(p2,p1, ncol=1)
p1 <- ggplot(data=subset(pf.fc_by_age, age < 71), aes(x=age, y=friend_count_mean)) + geom_line()
grid.arrange(p2,p1, ncol=1)
ggsave("facebook_friendcount_mean_vs_age_months_side_by_side.jpg")
p0 <- ggplot(data=subset(pf, age <71), aes(x=round(age/5)*5, y=friend_count) + geom_line(stat='summary', fun.y=mean)
)
p0 <- ggplot(data=subset(pf, age <71), aes(x=round(age/5)*5, y=friend_count)) + geom_line(stat='summary', fun.y=mean)
grid.arrange(p2,p1, p0, ncol=1)
ggsave("facebook_friendcount_mean_vs_age_months_side_by_side.jpg")
p2 <- p2 + geom_smooth()
p1 <- p1 + geom_smooth()
grid.arrange(p2,p1, p0, ncol=1)
ggsave("facebook_friendcount_mean_vs_age_months_side_by_side.jpg")
?diamonds
?Diamonds
dir()
df <- read.delim('diamondsbig.csv')
summary(df)
em(df)
rm(df)
data(diamonds)
library(ggplot2)
data(diamonds)
data(diamonds)
data(?)
?data
data()
data(package=ggplot2)
data(package = .packages(all.available = TRUE))
?ggplot2
?ggplot
library(ggplot)
library(ggplot2)
library('ggplot2')
?ggplot
install.packages("ggplot2")
library(ggplot2)
data(diamonds)
head(pf)
ggplot(data=subset(pf.fc_by_age_months, age < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
install.packages("ggplot2")
ggplot(data=subset(pf.fc_by_age_months, age < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
library(ggplot2)
ggplot(data=subset(pf.fc_by_age_months, age < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
ggplot(data=subset(pf.fc_by_age_months, age_with_months < 71), aes(x=age_with_months, y=friend_count_mean)) + geom_line()
data(diamonds)
?diamonds
summary(diamonds)
ggplot(data=diamonds, aes(y=price, x=x)) + geom_point()
ggplot(data=diamonds, aes(y=price, x=x)) + geom_point(alphs=1/20)+ xlim(3,9)
ggplot(data=diamonds, aes(y=price, x=x)) + geom_point(alpha=1/20)+ xlim(3,9)
ggplot(data=diamonds, aes(y=price, x=x)) + geom_jitter(alpha=1/20)+ xlim(3,9)
ggsave("diamonds_price_vs_x.jpg")
ggplot(data=diamonds, aes(y=price, x=x)) + geom_jitter(alpha=1/20)+ xlim(3,9) + coord_trans(y="sqrt")
ggplot(data=diamonds, aes(y=price, x=y)) + geom_point()
ggplot(data=diamonds, aes(y=price, x=y)) + geom_point() + xlim(0,10)
ggplot(data=diamonds, aes(y=price, x=z)) + geom_point()
ggplot(data=diamonds, aes(y=price, x=z)) + geom_point() + xlim(0,6)
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(data=diamonds, aes(y=price, x=depth)) + geom_point()
ggplot(data=diamonds, aes(y=price, x=depth)) + geom_jitter(alpha=1/20) + xlim(55,67)
ggsave("diamonds_price_vs_depth.jpg")
ggplot(data=diamonds, aes(y=price, x=depth)) + geom_point(alpha=1/100) + scale_x_continuous(breaks=2)
ggplot(data=diamonds, aes(y=price, x=depth)) + geom_point(alpha=1/100) + scale_x_continuous(breaks=seq(50,70,2))
corr.test(diamonds$price, diamonds$depth)
cor.test(diamonds$price, diamonds$depth)
cor.test(diamonds$depth, diamonds$price)
ggplot(data=diamonds, aes(y=price, x=carat)) + geom_point()
ggplot(data=diamonds, aes(y=price, x=carat)) + geom_point() + cartesian_coord(ylim=c(0,max(diamonds$price)*0.99), xlim=c(0,max(diamonds$price)*0.99))
ggplot(data=diamonds, aes(y=price, x=carat)) + geom_point() + coord_cartesian(ylim=c(0,max(diamonds$price)*0.99), xlim=c(0,max(diamonds$price)*0.99))
ggplot(data=diamonds, aes(y=price, x=carat)) + geom_point() + coord_cartesian(ylim=c(0,max(diamonds$price)*0.99), xlim=c(0,max(diamonds$carat)*0.99))
diamonds$volume < diamonds$x * diamonds$y * diamonds$z
head(diamonds)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
head(diamonds)
ggplot(data=diamonds, aes(y=price, x=volume)) + geom_point()
cor.test(diamonds$volume, diamonds$price)
ggplot(data=diamonds, aes(y=price, x=volume)) + geom_point() + xlim(0,500)
ggplot(data=diamonds, aes(y=price, x=volume)) + geom_point()
length(diamonds$volume == 0)
str (diamonds)
diamonds[diamonds$volume == 0,]
length(diamonds[diamonds$volume == 0,])
df <-  diamonds[diamonds$volume > 0 & diamonds$volume < 800,]
head(df)
cor.test(df$price, df$volume)
ggplot(data=df, aes(y=price, x=volume)) + geom_point()
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/100)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/50)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/10)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/20)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/30)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/40)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/40) + geom_smooth(method='lm', color='red')
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/40)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/20)
ggplot(data=df, aes(y=price, x=volume)) + geom_point(alpha=1/20) + geom_smooth(method='lm', color='red')
ggsave("diamonds_price_vs_volume_lm.jpg")
diamondsByClarity <- diamonds %>% group_by(clarity)
library(dplyr)
?dplyr
install.packages("dplyr")
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n=n())
load(dplyr)
load(dplyr2)
library(dplyr)
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n=n())
head(diamondsByClarity)
suppressMessages(library(dplyr))
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n=n())
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n=n())
str(diamonds)
summary(diamonds$price)
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price), max_price = max(price), n=n())
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = as.integer(mean(price)), median_price = median(price), min_price = min(price), max_price = max(price), n=n())
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = mean(price) * 1.0, median_price = median(price) * 1.0, min_price = min(price), max_price = max(price), n=n())
head(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
head(diamonds_mp_by_clarity)
head(diamonds_mp_by_color)
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=color)) + gg_bar()
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=color)) + geom_bar()
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar()
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar(stat="identity")
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar(stat="identity", color='green')
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar(stat="identity", fill='green')
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar(stat="identity", fill='cyan')
ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar(stat="identity", fill='blue')
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(y=mean_price, x=clarity)) + geom_bar(stat="identity", fill='blue')
p2 <- ggplot(data=diamonds_mp_by_color, aes(y=mean_price, x=color)) + geom_bar(stat="identity", fill='red')
grid.arrange(p1, p2, ncol=1)
library(gridExtra)
install.package("gridExtra")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, ncol=1)
ggsave("daimonds_mean_price_by_clarity_color.jpg")
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
ggplot(data=diamonds_mp_by_cut, aes(y=mean_price, x=cut)) + geom_bar(stat="identity", fill='blue')
ggsave("diamonds_mean_price_by_cut.jpg")
dfcell <- read.csv('cell_phone_total.csv', header = T, row.names = 1, check.names = F)
df2 <- subset(dfcell, rowSums(dfcell, na.rm=T) > 0, colSums(dfcell, na.rm=T) > 0)
df2['country'] = row.names(df2)
dim(df2)
library(tidyr)
install.packages("tidyr")
library(tidyr)
df3 <- gather(df2, "year", "CellPhoneTotal", -country)
head(df3)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_point()
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_point()+ coord_cartesian(xlim=c(1990,2011))
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_point()
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_point()+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_point()
str(df3)
df3$year_i <- as.integer(df3$year)
head(df3)
df3$year_i <- as.character(df3$year)
head(df3)
df3$year_i <- as.integer(df3$year_i)
head(df3)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year_i)) + geom_point()
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_point()+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year_i)) + geom_point()+ xlim(1990,2011)
head(df2)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year_i)) + geom_point()+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year_i)) + geom_point(alpha=1/10)+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year_i)) + geom_point()+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year_i)) + geom_line()+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_bar(stat="identity")+ xlim(1990,2011)
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_bar(stat="identity")
qplot(data=df3, y=CellPhoneTotal, x=year) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
df3$year <- as.integer(as.character(df3$year))
qplot(data=df3, y=CellPhoneTotal, x=year) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphonetotal_by_year.jpg")
qplot(data=df3, y=CellPhoneTotal, x=year) + geom_point() +
coord_cartesian(xlim=c(1990,2011)) + geom_smooth(method="lm", color='red')
qplot(data=df3, y=CellPhoneTotal, x=year) + geom_point() +
coord_cartesian(xlim=c(1990,2011)) + geom_smooth(method="loess", color='red')
corr.test(df3$CellPhoneTotal, df3$year)
cor.test(df3$CellPhoneTotal, df3$year)
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year, fill=country) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
)
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year, fill=country)) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphonetotal_by_country.jpg")
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year, colour=country)) + geom_line(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphone_total_bycountry_line.jpg")
ggplot(data=subset(df3,country %in% c("Finland", "United States", "South Korea", "India", "China")),
aes(y=CellPhoneTotal, x=year)) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011)) + facet_wrap(~country, scales="free_y")
ggsave("cellphonetotal_by_country_side_by_side.jpg")
ggplot(data=df3, aes(y=CellPhoneTotal, x=year)) + geom_bar(stat="identity") +
coord_cartesian(xlim=c(1990,2011))
ggsave("cellphonetotal_by_year.jpg")
pf.fc_by_age_gender <- pf %>% group_by( age, gender ) %>%
summarise( mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n() )
head(pf.fc_by_age_gender)
ggplot(data=pf.fc_by_age_gender, aes(y=median_friend_count, x=age)) + geom_line(aes(color=gender))
install.packages('reshape2')
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
library(reshape2)
install.packages('reshape2')
install.packages("reshape2")
install.packages("reshape2")
remove.packages('reshape2')
library(reshape2)
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcats(pf.fc_by_age_gender, age~gender, value.var='median_friend_count')
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender, age~gender, value.var='median_friend_count')
head(pf.fc_by_age_gender.wide)
pf.fc_by_age_gender.wide <- pf.fc_by_age_gender.wide[,1:3]
head(pf.fc_by_age_gender.wide)
ggplot
library(ggplot2)
View(pf.fc_by_age_gender.wide)
ggplot(data=pf.fc_by_age_gender.wide, aes=(x=age)) +
geom_line(aes(y=female, colour = "female")) + geom_line(aes(y=male, colour="male"))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male"))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male")) + geom_hline(aes(yintercept=1, linetype=2))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male")) + geom_hline(aes(yintercept=1))
ggplot(data=pf.fc_by_age_gender.wide, aes(x=age)) + geom_line(aes(y=female, colour="female")) + geom_line(aes(y=male, colour="male")) + geom_hline(aes(yintercept=1), linetype=2)
pwd()
dir()
getwd()
savehistory("~/GitHub/EDA/history_aug14.R")
